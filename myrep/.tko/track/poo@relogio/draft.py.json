{
    "patches": [
        {
            "label": "2025-10-22_02-20-30",
            "content": "@@ -157,9 +157,17 @@\n r: int):\n+%0A       \n  \n",
            "lines": "8"
        },
        {
            "label": "2025-10-22_02-20-45",
            "content": "@@ -157,18 +157,9 @@\n r: int):\n-%0A        \n  \n",
            "lines": "7"
        },
        {
            "label": "2025-10-22_02-21-02",
            "content": "@@ -33,51 +33,8 @@\n self\n-, hora: int = 0, min: int = 0, seg: int = 0\n ):%0A \n@@ -49,283 +49,50 @@\n elf.\n-__\n hora\n- = 0%0A        self.__minuto = 0%0A        self.__segundo = 0%0A%0A        self.setHora(hora)%0A        self.setMin(min)%0A        self.setSeg(seg)%0A        %0A %0A    def getHora(self):%0A        return self.__hora%0A    def getMin(self):%0A        return self.__minuto%0A    def getSeg(self):\n+: int = 0%0A        self.minuto: int = 0\n %0A   \n@@ -100,181 +100,29 @@\n     \n-return \n self.\n-__\n segundo\n-%0A    %0A    def setHora(self, valor: int):%0A        if valor %3E 0 and valor %3C 23:%0A            return %0A        else:%0A            print(%22Fail: hora invalida%22)\n+: int = 0\n %0A   \n@@ -135,297 +135,40 @@\n def \n-setMin(self, valor: int):  %0A        if valor %3E 0 and valor %3C 60:%0A            return %0A        else:%0A            print(%22Fail: minuto invalido%22)%0A%0A    def setSeg(self, valor: int):%0A        if valor %3E 0 and valor %3C 60:%0A            return %0A        else:%0A            print(%22Fail: segundo invalido%22)%0A%0A\n+getHora(self, valor: int):%0A         \n",
            "lines": "8"
        },
        {
            "label": "2025-10-22_02-41-05",
            "content": "@@ -235,24 +235,26 @@\n g)%0A        %0A\n+ %0A\n     def getH\n",
            "lines": "36"
        },
        {
            "label": "2025-10-22_02-47-01",
            "content": "@@ -230,16 +230,24 @@\n eg(seg)%0A\n+        \n %0A    def\n@@ -464,17 +464,16 @@\n  valor %3C\n-=\n  23:%0A   \n@@ -485,27 +485,15 @@\n     \n-self.__hora = valor\n+return \n %0A   \n@@ -609,36 +609,35 @@\n  %3E 0 and valor %3C\n-= 59\n+ 60\n :%0A            se\n@@ -638,29 +638,15 @@\n     \n-self.__minuto = valor\n+return \n %0A   \n@@ -770,12 +770,11 @@\n or %3C\n-= 59\n+ 60\n :%0A  \n@@ -787,30 +787,14 @@\n     \n-self.__segundo = valor\n+return\n  %0A  \n@@ -854,415 +854,4 @@\n %22)%0A%0A\n-    def nextSecond(self):%0A        self.__segundo += 1%0A        if self.__segundo %3E 59:%0A            self.__segundo = 0%0A            self.__segundo += 1%0A        if self.__minuto %3E 59:%0A            self.__minuto = 0%0A            self.__minuto += 1%0A        if self.__hora %3E 23:%0A            self.__hora = 0%0A%0A    def __str__(self):%0A        return (f%22%7Bself.__hora:02d%7D:%7Bself.__minuto:02d%7D:%7Bself.__segundo:02d%7D%22)%0A        %0A%0A\n",
            "lines": "35"
        },
        {
            "label": "2025-10-22_03-07-18",
            "content": "@@ -3,12 +3,15 @@\n ass \n-Pato\n+Relouge\n :%0A  \n@@ -109,32 +109,35 @@\n       self.__min\n+uto\n  = 0%0A        sel\n@@ -143,25 +143,103 @@\n lf.__seg\n+undo\n  = 0%0A\n-    \n+%0A        self.setHora(hora)%0A        self.setMin(min)%0A        self.setSeg(seg)%0A\n %0A    def\n@@ -328,16 +328,19 @@\n lf.__min\n+uto\n %0A    def\n@@ -379,16 +379,20 @@\n lf.__seg\n+undo\n %0A    %0A  \n@@ -411,17 +411,21 @@\n a(self, \n-H\n+valor\n : int):%0A\n@@ -435,17 +435,21 @@\n      if \n-H\n+valor\n  %3E 0 and\n@@ -453,14 +453,19 @@\n and \n-H\n+valor\n  %3C= \n-0\n+23\n :%0A  \n@@ -488,17 +488,21 @@\n _hora = \n-H\n+valor\n %0A       \n@@ -537,23 +537,28 @@\n il: \n-erro na hora%22)%0A\n+hora invalida%22)%0A    \n %0A   \n@@ -579,16 +579,22 @@\n lf, \n-M\n+valor\n : int):\n+  \n %0A   \n@@ -601,17 +601,21 @@\n      if \n-M\n+valor\n  %3E 0 and\n@@ -619,14 +619,19 @@\n and \n-M\n+valor\n  %3C= \n-0\n+59\n :%0A  \n@@ -654,12 +654,19 @@\n _min\n- = M\n+uto = valor\n %0A   \n@@ -705,29 +705,26 @@\n il: \n-erro no minuto%22)%0A    \n+minuto invalido%22)%0A\n %0A   \n@@ -741,17 +741,21 @@\n g(self, \n-S\n+valor\n : int):%0A\n@@ -765,17 +765,21 @@\n      if \n-S\n+valor\n  %3E 0 and\n@@ -783,14 +783,19 @@\n and \n-S\n+valor\n  %3C= \n-0\n+59\n :%0A  \n@@ -818,12 +818,21 @@\n _seg\n- = S\n+undo = valor \n %0A   \n@@ -871,21 +871,22 @@\n il: \n-erro no segun\n+segundo invali\n do%22)\n@@ -935,15 +935,18 @@\n _seg\n+undo\n  += 1%0A\n-%0A\n     \n@@ -962,16 +962,20 @@\n lf.__seg\n+undo\n  %3E 59:%0A \n@@ -995,16 +995,20 @@\n lf.__seg\n+undo\n  = 0%0A   \n@@ -1026,16 +1026,20 @@\n lf.__seg\n+undo\n  += 1%0A  \n@@ -1057,16 +1057,19 @@\n lf.__min\n+uto\n  %3E 59:%0A \n@@ -1089,16 +1089,19 @@\n lf.__min\n+uto\n  = 0%0A   \n@@ -1119,16 +1119,19 @@\n lf.__min\n+uto\n  += 1%0A  \n@@ -1186,17 +1186,117 @@\n ra = 0%0A%0A\n-%0A\n+    def __str__(self):%0A        return (f%22%7Bself.__hora:02d%7D:%7Bself.__minuto:02d%7D:%7Bself.__segundo:02d%7D%22)\n %0A       \n",
            "lines": "50"
        },
        {
            "label": "2025-10-22_12-33-32",
            "content": "@@ -985,28 +985,42 @@\n %0A            self.__hora = 0\n+%0A%0A%0A%0A        %0A%0A\n",
            "lines": "47"
        },
        {
            "label": "2025-10-22_12-35-05",
            "content": "@@ -1009,21 +1009,4 @@\n  = 0\n-%0Adef main():%0A    \n",
            "lines": "42"
        },
        {
            "label": "2025-10-25_21-26-05",
            "content": "@@ -3,13 +3,12 @@\n ass \n-Watch\n+Pato\n :%0A  \n@@ -146,106 +146,884 @@\n = 0%0A\n-%0A        self.setHora(hora)%0A        self.setMin(min)%0A        self.setSeg(seg)%0A%0A    def getHora(self):%0A\n+    %0A    def getHora(self):%0A        return self.__hora%0A    def getMin(self):%0A        return self.__min%0A    def getSeg(self):%0A        return self.__seg%0A    %0A    def setHora(self, H: int):%0A        if H %3E 0 and H %3C= 0:%0A            self.__hora = H%0A        else:%0A            print(%22Fail: erro na hora%22)%0A%0A    def setMin(self, M: int):%0A        if M %3E 0 and M %3C= 0:%0A            self.__min = M%0A        else:%0A            print(%22Fail: erro no minuto%22)%0A    %0A    def setSeg(self, S: int):%0A        if S %3E 0 and S %3C= 0:%0A            self.__seg = S%0A        else:%0A            print(%22Fail: erro no segundo%22)%0A%0A    def nextSecond(self):%0A        self.__seg += 1%0A%0A        if self.__seg %3E 59:%0A            self.__seg = 0%0A            self.__seg += 1%0A        if self.__min %3E 59:%0A            self.__min = 0%0A            self.__min += 1%0A        if self.__hora %3E 23:%0A            self.__hora = 0%0Adef main():%0A    \n",
            "lines": "44"
        },
        {
            "label": "2025-10-25_21-34-04",
            "content": "@@ -249,1508 +249,4 @@\n f):%0A\n-        return self.__hora%0A    def getMin(self):%0A        return self.__min%0A    def getSeg(self):%0A        return self.__seg%0A    %0A    def setHora(self, H: int):%0A        if H %3E= 0 and H %3C= 23:%0A            self.__hora = H%0A        else:%0A            print(%22fail: hora invalida%22)%0A    def setMin(self, M: int):%0A        if M %3E= 0 and M %3C= 59:%0A            self.__hora = M%0A        else:%0A            print(%22fail: minuto invalido%22)%0A    def setSeg(self, S: int):%0A        if S %3E= 0 and S %3C= 59:%0A            self.__hora = S%0A        else:%0A            print(%22fail: segundo invalido%22)%0A%0A    def nextSecond(self):%0A        self.__seg +=1%0A        if self.__seg %3E 59:%0A            self.__seg = 0%0A            self.__seg +=1%0A        if self.__min %3E 59:%0A            self.__min = 0%0A            self.__min +=1%0A        if self.__hora %3E 23:%0A            self.__hora = 0%0A%0A    def __str__(self):%0A        return f%22%7Bself.__hora:02d%7D:%7Bself.__min:02d%7D:%7Bself.__seg:02d%7D%22%0A    %0Adef main():%0A    relog = Watch()%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        if args%5B0%5D == %22show%22:%0A            print(relog)%0A        if args%5B0%5D == %22init%22:%0A            H, M, S = map(int, args%5B1:%5D)%0A            relog = Watch(H, M, S)%0A%0A        if args%5B0%5D == %22set%22:%0A            H, M, S = map(int, args%5B1:%5D)%0A            relog.setHora(H)%0A            relog.setMin(M)%0A            relog.setSeg(S)%0A        %0A        if args%5B0%5D == %22next%22:%0A            relog.nextSecond()%0A%0Amain()\n",
            "lines": "11"
        },
        {
            "label": "2025-10-25_21-49-08",
            "content": "@@ -598,19 +598,20 @@\n  self.__\n-min\n+hora\n  = M%0A   \n@@ -744,19 +744,20 @@\n  self.__\n-seg\n+hora\n  = S%0A   \n",
            "lines": "73"
        },
        {
            "label": "2025-10-25_21-55-26",
            "content": "@@ -941,36 +941,32 @@\n seg +=1%0A        \n-    \n if self.__min %3E \n@@ -973,36 +973,32 @@\n 59:%0A            \n-   \n- \n self.__min = 0%0A \n@@ -992,28 +992,24 @@\n f.__min = 0%0A\n-    \n             \n@@ -1031,24 +1031,16 @@\n         \n-  \n-      \n if self.\n@@ -1048,32 +1048,24 @@\n _hora %3E 23:%0A\n-        \n             \n",
            "lines": "73"
        },
        {
            "label": "2025-10-25_21-57-01",
            "content": "@@ -857,19 +857,18 @@\n __seg +=\n- \n 1%0A\n+\n         \n@@ -937,15 +937,14 @@\n f.__\n-min\n+seg\n  +=\n- \n 1%0A  \n@@ -1031,16 +1031,14 @@\n f.__\n-hora\n+min\n  +=\n- \n 1%0A  \n",
            "lines": "73"
        },
        {
            "label": "2025-10-25_22-01-53",
            "content": "class Watch:\n    def __init__(self, hora: int = 0, min: int = 0, seg: int = 0):\n        self.__hora = 0\n        self.__min = 0\n        self.__seg = 0\n\n        self.setHora(hora)\n        self.setMin(min)\n        self.setSeg(seg)\n\n    def getHora(self):\n        return self.__hora\n    def getMin(self):\n        return self.__min\n    def getSeg(self):\n        return self.__seg\n    \n    def setHora(self, H: int):\n        if H >= 0 and H <= 23:\n            self.__hora = H\n        else:\n            print(\"fail: hora invalida\")\n    def setMin(self, M: int):\n        if M >= 0 and M <= 59:\n            self.__min = M\n        else:\n            print(\"fail: minuto invalido\")\n    def setSeg(self, S: int):\n        if S >= 0 and S <= 59:\n            self.__seg = S\n        else:\n            print(\"fail: segundo invalido\")\n\n    def nextSecond(self):\n        self.__seg += 1\n        if self.__seg > 59:\n            self.__seg = 0\n            self.__min += 1\n            if self.__min > 59:\n                self.__min = 0\n                self.__hora += 1\n                if self.__hora > 23:\n                    self.__hora = 0\n\n    def __str__(self):\n        return f\"{self.__hora:02d}:{self.__min:02d}:{self.__seg:02d}\"\n    \ndef main():\n    relog = Watch()\n\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        if args[0] == \"show\":\n            print(relog)\n        if args[0] == \"init\":\n            H, M, S = map(int, args[1:])\n            relog = Watch(H, M, S)\n\n        if args[0] == \"set\":\n            H, M, S = map(int, args[1:])\n            relog.setHora(H)\n            relog.setMin(M)\n            relog.setSeg(S)\n        \n        if args[0] == \"next\":\n            relog.nextSecond()\n\nmain()",
            "lines": "73"
        }
    ]
}