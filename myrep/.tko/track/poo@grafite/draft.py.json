{
    "patches": [
        {
            "label": "2025-10-25_23-27-36",
            "content": "@@ -1,10 +0,0 @@\n-class%0A    \n",
            "lines": "0"
        },
        {
            "label": "2025-10-25_23-27-58",
            "content": "@@ -2,5 +2,9 @@\n lass\n-:\n+%0A    \n",
            "lines": "2"
        },
        {
            "label": "2025-10-25_23-43-40",
            "content": "@@ -2,2664 +2,5 @@\n lass\n- Grafite:%0A    def __init__(self, thi: float, har: str, size: int):%0A        self.thickness = thi%0A        self.__hardness = har%0A        self.__size = size%0A%0A    def uperSheet(self):%0A        gastos = %7B%22HB%22: 1, %222B%22: 2, %224B%22: 4, %226B%22: 6%7D%0A        return gastos.get(self.__hardness, 0)%0A    %0A    def __str__(self):%0A        return f%22%7Bself.thickness%7D:%7Bself.__hardness%7D:%7Bself.__size%7D%22%0A    %0Aclass Pen:%0A    def __init__(self, thi: float):%0A        self.__thickness = thi%0A        self.__tip = None%0A%0A    def hasGra(self) -%3E bool:%0A        return self.__tip is not None%0A    %0A    def insert(self, p: Grafite) -%3E bool:%0A        if self.hasGra():%0A            print(%22fail: ja existe grafite%22)%0A            return False%0A        if p.thinckness != self.__thickness:%0A            print(%22fail: calibre incompativel%22)%0A            return False%0A        self.__tip = p%0A        return True%0A    %0A    def __str__(self):%0A        if self.hasGra():%0A            return f%22calibre:%7Bself.__thickness%7D, grafite: %5B%7Bself.__tip%7D%5D%22%0A        else:%0A            return f%22calibre: %7Bself.__thickness%7D, grafite: null%22%0A        %0A    def remove(self):%0A        if not self.hasGra():%0A            print(%22fail: nao existe grafite%22)%0A            return%0A        remove = self.__tip%0A        self.__tip = None%0A        return remove%0A    %0A    def writeP(self):%0A        if not self.hasGra():%0A            print(%22fail: nao existe grafite%22)%0A            return False%0A        grafite = self.__tip%0A        gasto = grafite.uperSheet()%0A        if gasto %3C 0:%0A            print(%22fail: dureza invalida%22)%0A            return False%0A        if grafite.size %3C= 10:%0A            print(%22fail: tamanho insuficiente%22)%0A            return False%0A        grafite.size -= gasto%0A        if grafite.size %3C 10:%0A            grafite.size = 10%0A            print(%22fail: folha incompleta%22)%0A            return True%0A%0Adef main():%0A    lapiseira = None%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        if args%5B0%5D == %22show%22:%0A            print(%22lapiseira%22)%0A        if args%5B0%5D == %22init%22:%0A            calibre = float(args%5B1%5D)%0A            lapiseira = Pen(calibre)%0A        if args%5B0%5D == %22insert%22:%0A            if lapiseira:%0A                esp = float(args%5B1%5D)%0A                dur = str(args%5B2%5D)%0A                tam = int(args%5B3%5D)%0A                grafite = Grafite(esp, dur, tam)%0A                lapiseira.insert(grafite)%0A            else:%0A                print(%22lapiseira nao inicializada%22)%0A            if args%5B0%5D == %22remove%22:%0A                lapiseira.remove()%0A            if args%5B0%5D == %22write%22:%0A                if lapiseira:%0A                    lapiseira.writeP()%0A%0Amain()%0A\n+:\n",
            "lines": "1"
        },
        {
            "label": "2025-10-27_19-30-43",
            "content": "@@ -30,30 +30,24 @@\n __(self, thi\n-ckness\n : float, har\n@@ -46,21 +46,16 @@\n oat, har\n-dness\n : str, s\n@@ -85,38 +85,32 @@\n .thickness = thi\n-ckness\n %0A        self.__\n@@ -123,21 +123,16 @@\n ss = har\n-dness\n %0A       \n@@ -161,19 +161,17 @@\n    def u\n-seP\n+p\n erSheet(\n@@ -274,20 +274,17 @@\n rdness, \n-None\n+0\n )%0A    %0A \n@@ -414,22 +414,16 @@\n elf, thi\n-ckness\n : float)\n@@ -454,22 +454,16 @@\n ss = thi\n-ckness\n %0A       \n@@ -496,20 +496,16 @@\n f hasGra\n-fite\n (self) -\n@@ -576,23 +576,17 @@\n t(self, \n-grafite\n+p\n : Grafit\n@@ -611,36 +611,32 @@\n   if self.hasGra\n-fite\n ():%0A            \n@@ -704,23 +704,17 @@\n      if \n-grafite\n+p\n .thinckn\n@@ -832,23 +832,17 @@\n __tip = \n-grafite\n+p\n %0A       \n@@ -896,36 +896,32 @@\n   if self.hasGra\n-fite\n ():%0A            \n@@ -1110,36 +1110,32 @@\n  not self.hasGra\n-fite\n ():%0A            \n@@ -1186,21 +1186,16 @@\n   return\n- None\n %0A       \n@@ -1201,17 +1201,16 @@\n   remove\n-d\n  = self.\n@@ -1262,17 +1262,16 @@\n n remove\n-d\n %0A    %0A  \n@@ -1282,19 +1282,16 @@\n f writeP\n-age\n (self):%0A\n@@ -1316,20 +1316,16 @@\n f.hasGra\n-fite\n ():%0A    \n@@ -1387,33 +1387,24 @@\n eturn False%0A\n-        %0A\n         graf\n@@ -1449,11 +1449,9 @@\n te.u\n-seP\n+p\n erSh\n@@ -1452,25 +1452,24 @@\n uperSheet()%0A\n-%0A\n         if g\n@@ -1477,15 +1477,11 @@\n sto \n-is None\n+%3C 0\n :%0A  \n@@ -1629,38 +1629,8 @@\n e%22)%0A\n-            grafite.size = 10%0A\n     \n@@ -1650,25 +1650,16 @@\n n False%0A\n-        %0A\n         \n@@ -1680,17 +1680,16 @@\n = gasto%0A\n-%0A\n         \n@@ -1784,32 +1784,36 @@\n pleta%22)%0A        \n+    \n return True%0A%0Adef\n@@ -1984,34 +1984,32 @@\n   break%0A        \n-el\n if args%5B0%5D == %22s\n@@ -2030,137 +2030,35 @@\n     \n-if lapiseira:%0A                print(%22lapiseira%22)%0A            else:%0A                print(%22lapiseira nao inicializada%22)%0A        el\n+print(%22lapiseira%22)%0A        \n if a\n@@ -2149,34 +2149,32 @@\n alibre)%0A        \n-el\n if args%5B0%5D == %22i\n@@ -2475,34 +2475,36 @@\n izada%22)%0A        \n-el\n+    \n if args%5B0%5D == %22r\n@@ -2518,35 +2518,16 @@\n %0A       \n-     if lapiseira:%0A\n         \n@@ -2519,39 +2519,32 @@\n                 \n-       \n lapiseira.remove\n@@ -2562,76 +2562,8 @@\n     \n-else:%0A                print(%22lapiseira nao inicializada%22)%0A        el\n if a\n@@ -2585,32 +2585,36 @@\n e%22:%0A            \n+    \n if lapiseira:%0A  \n@@ -2619,32 +2619,36 @@\n                 \n+  \n+  \n lapiseira.writeP\n@@ -2651,100 +2651,10 @@\n iteP\n-age()%0A            else:%0A                print(%22lapiseira nao inicializada%22)%0A                \n+()\n %0A%0Ama\n",
            "lines": "94"
        },
        {
            "label": "2025-10-27_19-49-42",
            "content": "@@ -120,24 +120,26 @@\n        self.\n+__\n hardness = h\n@@ -155,24 +155,26 @@\n        self.\n+__\n size = size%0A\n@@ -282,24 +282,26 @@\n os.get(self.\n+__\n hardness, No\n@@ -304,16 +304,20 @@\n , None)%0A\n+    \n %0A    def\n@@ -372,16 +372,18 @@\n %7D:%7Bself.\n+__\n hardness\n@@ -394,16 +394,21 @@\n elf.\n+__\n size%7D%22%0A\n-%0A\n+    \n %0Acla\n@@ -589,24 +589,28 @@\n is not None%0A\n+    \n %0A    def ins\n@@ -764,24 +764,25 @@\n  grafite.thi\n+n\n ckness != se\n@@ -919,16 +919,20 @@\n rn True%0A\n+    \n %0A    def\n@@ -998,33 +998,32 @@\n eturn f%22calibre:\n- \n %7Bself.__thicknes\n@@ -1130,16 +1130,24 @@\n : null%22%0A\n+        \n %0A    def\n@@ -1343,16 +1343,20 @@\n removed%0A\n+    \n %0A    def\n@@ -1470,32 +1470,40 @@\n    return False%0A\n+        \n %0A        grafite\n@@ -1641,33 +1641,32 @@\n    return False%0A\n-%0A\n         if grafi\n@@ -1783,16 +1783,24 @@\n n False%0A\n+        \n %0A       \n@@ -1927,17 +1927,16 @@\n pleta%22)%0A\n-%0A\n         \n@@ -1948,17 +1948,16 @@\n n True%0A%0A\n-%0A\n def main\n@@ -2203,16 +2203,17 @@\n   print(\n+%22\n lapiseir\n@@ -2213,16 +2213,17 @@\n apiseira\n+%22\n )%0A      \n@@ -2515,15 +2515,20 @@\n r = \n+str(\n args%5B2%5D\n+)\n %0A   \n@@ -3052,16 +3052,32 @@\n izada%22)%0A\n+                \n %0A%0Amain()\n",
            "lines": "108"
        },
        {
            "label": "2025-10-27_19-50-39",
            "content": "@@ -3004,9 +3004,8 @@\n %0Amain()%0A\n-%0A\n",
            "lines": "112"
        },
        {
            "label": "2025-10-27_19-51-36",
            "content": "class Grafite:\n    def __init__(self, thickness: float, hardness: str, size: int):\n        self.thickness = thickness\n        self.hardness = hardness\n        self.size = size\n\n    def usePerSheet(self):\n        gastos = {\"HB\": 1, \"2B\": 2, \"4B\": 4, \"6B\": 6}\n        return gastos.get(self.hardness, None)\n\n    def __str__(self):\n        return f\"{self.thickness}:{self.hardness}:{self.size}\"\n\n\nclass Pen:\n    def __init__(self, thickness: float):\n        self.__thickness = thickness\n        self.__tip = None\n\n    def hasGrafite(self) -> bool:\n        return self.__tip is not None\n\n    def insert(self, grafite: Grafite) -> bool:\n        if self.hasGrafite():\n            print(\"fail: ja existe grafite\")\n            return False\n        if grafite.thickness != self.__thickness:\n            print(\"fail: calibre incompativel\")\n            return False\n        self.__tip = grafite\n        return True\n\n    def __str__(self):\n        if self.hasGrafite():\n            return f\"calibre: {self.__thickness}, grafite: [{self.__tip}]\"\n        else:\n            return f\"calibre: {self.__thickness}, grafite: null\"\n\n    def remove(self):\n        if not self.hasGrafite():\n            print(\"fail: nao existe grafite\")\n            return None\n        removed = self.__tip\n        self.__tip = None\n        return removed\n\n    def writePage(self):\n        if not self.hasGrafite():\n            print(\"fail: nao existe grafite\")\n            return False\n\n        grafite = self.__tip\n        gasto = grafite.usePerSheet()\n\n        if gasto is None:\n            print(\"fail: dureza invalida\")\n            return False\n\n        if grafite.size <= 10:\n            print(\"fail: tamanho insuficiente\")\n            grafite.size = 10\n            return False\n\n        grafite.size -= gasto\n\n        if grafite.size < 10:\n            grafite.size = 10\n            print(\"fail: folha incompleta\")\n\n        return True\n\n\ndef main():\n    lapiseira = None\n\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            if lapiseira:\n                print(lapiseira)\n            else:\n                print(\"lapiseira nao inicializada\")\n        elif args[0] == \"init\":\n            calibre = float(args[1])\n            lapiseira = Pen(calibre)\n        elif args[0] == \"insert\":\n            if lapiseira:\n                esp = float(args[1])\n                dur = args[2]\n                tam = int(args[3])\n                grafite = Grafite(esp, dur, tam)\n                lapiseira.insert(grafite)\n            else:\n                print(\"lapiseira nao inicializada\")\n        elif args[0] == \"remove\":\n            if lapiseira:\n                lapiseira.remove()\n            else:\n                print(\"lapiseira nao inicializada\")\n        elif args[0] == \"write\":\n            if lapiseira:\n                lapiseira.writePage()\n            else:\n                print(\"lapiseira nao inicializada\")\n\n\nmain()\n\n",
            "lines": "113"
        }
    ]
}