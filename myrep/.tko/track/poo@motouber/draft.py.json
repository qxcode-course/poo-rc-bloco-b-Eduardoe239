{
    "patches": [
        {
            "label": "2025-10-26_21-09-17",
            "content": "@@ -1,4 +0,0 @@\n-def \n",
            "lines": "0"
        },
        {
            "label": "2025-10-26_21-14-14",
            "content": "@@ -1,38 +1,4 @@\n-de\n def\n-fed%0Aededede%0Adeseferfd%0Acwdefwewde%0A\n+ \n",
            "lines": "1"
        },
        {
            "label": "2025-10-26_21-39-56",
            "content": "@@ -1,2 +1,38 @@\n-%0A\n+dedeffed%0Aededede%0Adeseferfd%0Acwdefwewde\n %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-26_21-40-27",
            "content": "@@ -1,557 +1,2 @@\n-class Person:%0A    def __init__(self, n: str, m: int):%0A        self.__name = n%0A        self.__money = m%0A%0A    def getName(self):%0A        return self.__name%0A    def getMoney(self):%0A        return self.__money%0A    %0A    def adMoney(self, v: int):%0A        self.__money -= v%0A        return f%22%7Bself.__name%7D:%7Bself.__money%7D%22%0A%0Aclass Mtuber:%0A    def __init__(self):%0A        self.__cost = 0%0A        self.__driver: Person %7C None = None%0A        self.__passenger: Person %7C None = None%0A%0A    def __str__(self):%0A        driver = str(self.__driver) if self.__driver else %22None%22\n+%0A%0A\n",
            "lines": "2"
        },
        {
            "label": "2025-10-26_22-05-53",
            "content": "@@ -433,16 +433,22 @@\n lf.__pas\n+senger\n : Person\n@@ -554,1030 +554,4 @@\n one%22\n-%0A        pas = str(self.__driver) if self.__pas else %22None%22%0A        return f%22Cost: %7Bself.__cost%7D, Driver:%7Bdriver%7D, Pas: %7Bpas%7D%22%0A    %0A    def setDrive(self, c: int):%0A        if self.__driver is None or self.__pas is None:%0A            return%0A        self.__cost += c%0A%0A    def leavePas(self):%0A        if self.__pas is None:%0A            return%0A        if self.__pas.getMoney() %3E= self.cost:%0A            self.__pas.pay(self.__cost)%0A            self.__driver.adMoney(self.__cost)%0A            print(f%22%7Bself.__pas.getName()%7D:%7Bself.__pas.getMoney()%7Dleft%22)%0A        else:%0A            print(%22fail: Passenger does not have enough money%22)%0A            self.__driver.adMoney(self.__pas.getMoney()+self.__cost)%0A            self.__pas.pay(self.__pas.getMoney())%0A            print(f%22%7Bself.__pas.getName()%7D:0 left%22)%0A            self.__cost = 0%0A            self.__pas = None%0A%0Adef main():%0A    car = Mtuber()%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A\n",
            "lines": "22"
        },
        {
            "label": "2025-10-27_17-54-06",
            "content": "@@ -1,20 +1,20 @@\n class Pe\n-ssoa\n+rson\n :%0A    de\n@@ -38,17 +38,17 @@\n n: str, \n-d\n+m\n : int):%0A\n@@ -63,17 +63,17 @@\n self.__n\n-o\n+a\n me = n%0A \n@@ -90,20 +90,17 @@\n f.__\n-dinheiro = d\n+money = m\n %0A%0A  \n@@ -109,17 +109,17 @@\n def getN\n-o\n+a\n me(self)\n@@ -143,17 +143,17 @@\n self.__n\n-o\n+a\n me%0A    d\n@@ -158,24 +158,21 @@\n  def get\n-Dinheiro\n+Money\n (self):%0A\n@@ -193,24 +193,21 @@\n  self.__\n-dinheiro\n+money\n %0A    %0A  \n@@ -216,78 +216,15 @@\n def \n-pagar(self, v: int):%0A        self.__dinheiro -= v%0A    %0A    def receber\n+adMoney\n (sel\n@@ -254,54 +254,19 @@\n f.__\n-dinheiro +\n+money -\n = v%0A\n-        %0A    def __str__(self):%0A\n     \n@@ -287,17 +287,17 @@\n self.__n\n-o\n+a\n me%7D:%7Bsel\n@@ -300,24 +300,21 @@\n %7Bself.__\n-dinheiro\n+money\n %7D%22%0A%0Aclas\n@@ -355,33 +355,33 @@\n         self.__c\n-u\n+o\n st = 0%0A        s\n@@ -386,26 +386,30 @@\n  self.__\n-mt\n+driver\n : Pe\n-ssoa\n+rson\n  %7C None \n@@ -437,20 +437,20 @@\n _pas: Pe\n-ssoa\n+rson\n  %7C None \n@@ -488,18 +488,22 @@\n         \n-mt\n+driver\n  = str(s\n@@ -500,34 +500,38 @@\n er = str(self.__\n-mt\n+driver\n ) if self.__mt e\n@@ -530,24 +530,25 @@\n f.__\n-mt\n+driver\n  else %22\n-(empty)\n+None\n %22%0A  \n@@ -570,18 +570,22 @@\n (self.__\n-mt\n+driver\n ) if sel\n@@ -602,15 +602,12 @@\n se %22\n-(empty)\n+None\n %22%0A  \n@@ -626,16 +626,17 @@\n  f%22Cost:\n+ \n %7Bself.__\n@@ -640,397 +640,64 @@\n .__c\n-u\n+o\n st%7D, \n-d\n+D\n river:%7B\n-mt%7D, passenger:%7Bpas%7D%22%0A    %0A    def setMto(self, mt: Pessoa):%0A        if self.__mt is not None:%0A            print(%22fail: ja existe um motorista%22)%0A            return%0A        self.__mt = mt%0A    %0A    def setPas(self, pas: Pessoa):%0A        if self.__pas is not None:%0A            print(%22fail: ja existe um passageiro%22)%0A            return%0A        self.__pas = pas%0A%0A    def inCorrida\n+driver%7D, Pas: %7Bpas%7D%22%0A    %0A    def setDrive\n (sel\n@@ -730,18 +730,22 @@\n f.__\n-mt\n+driver\n  is None\n :%0A  \n@@ -744,142 +744,31 @@\n None\n-:%0A            print(%22fail: sem motorista%22)%0A            return%0A        if self.__pas is None:%0A            print(%22fail: sem passageiro%22)\n+ or self.__pas is None:\n %0A   \n@@ -803,19 +803,16 @@\n .__c\n-u\n+o\n st \n++\n = c\n-    \n %0A%0A  \n@@ -821,17 +821,16 @@\n def \n-FiCorrida\n+leavePas\n (sel\n@@ -868,50 +868,8 @@\n ne:%0A\n-            print(%22fail: sem passageiro%22)%0A\n     \n@@ -908,24 +908,21 @@\n _pas.get\n-Dinheiro\n+Money\n () %3E= se\n@@ -959,11 +959,9 @@\n s.pa\n-gar\n+y\n (sel\n@@ -957,33 +957,33 @@\n pas.pay(self.__c\n-u\n+o\n st)%0A            \n@@ -993,18 +993,22 @@\n f.__\n-mt.receber\n+driver.adMoney\n (sel\n@@ -1012,17 +1012,17 @@\n self.__c\n-u\n+o\n st)%0A    \n@@ -1053,17 +1053,17 @@\n pas.getN\n-o\n+a\n me()%7D:%7Bs\n@@ -1079,16 +1079,13 @@\n .get\n-Dinheiro\n+Money\n ()%7Dl\n@@ -1137,58 +1137,161 @@\n Pass\n-ageiro sem dinheiro suficiente%22)%0A            valor\n+enger does not have enough money%22)%0A            self.__driver.adMoney(self.__pas.getMoney()+self.__cost)%0A            self.__pas.pay(self.__pas.getMoney())\n %0A   \n@@ -1339,17 +1339,20 @@\n  left%22)%0A\n-%0A\n+    \n         \n@@ -1363,16 +1363,20 @@\n .__c\n-u\n+o\n st = 0%0A\n+    \n     \n",
            "lines": "54"
        },
        {
            "label": "2025-10-27_18-34-53",
            "content": "@@ -1,20 +1,20 @@\n class Pe\n-rson\n+ssoa\n :%0A    de\n@@ -35,23 +35,16 @@\n f, n\n-ame\n : str, \n-money\n+d\n : in\n@@ -67,18 +67,15 @@\n .__n\n-a\n+o\n me = n\n-ame\n %0A   \n@@ -90,21 +90,20 @@\n f.__\n-money = money\n+dinheiro = d\n %0A%0A  \n@@ -112,17 +112,17 @@\n def getN\n-a\n+o\n me(self)\n@@ -150,13 +150,12 @@\n .__n\n-a\n+o\n me%0A\n-%0A\n     \n@@ -161,21 +161,24 @@\n  def get\n-Money\n+Dinheiro\n (self):%0A\n@@ -203,14 +203,21 @@\n f.__\n-money%0A\n+dinheiro%0A    \n %0A   \n@@ -225,24 +225,21 @@\n def \n-addMoney\n+pagar\n (self, v\n alue\n@@ -226,36 +226,32 @@\n ef pagar(self, v\n-alue\n : int):%0A        \n@@ -261,23 +261,26 @@\n f.__\n-money += value%0A\n+dinheiro -= v%0A    \n %0A   \n@@ -288,19 +288,23 @@\n def \n-pay\n+receber\n (self, v\n alue\n@@ -291,36 +291,32 @@\n  receber(self, v\n-alue\n : int):%0A        \n@@ -326,23 +326,30 @@\n f.__\n-money -= value%0A\n+dinheiro += v%0A        \n %0A   \n@@ -394,17 +394,17 @@\n self.__n\n-a\n+o\n me%7D:%7Bsel\n@@ -411,26 +411,28 @@\n f.__\n-money\n+dinheiro\n %7D%22%0A%0A\n-%0A\n class Mt\n Uber\n@@ -427,17 +427,17 @@\n class Mt\n-U\n+u\n ber:%0A   \n@@ -465,33 +465,33 @@\n         self.__c\n-o\n+u\n st = 0%0A        s\n@@ -496,22 +496,33 @@\n  self.__\n-driver\n+mt: Pessoa %7C None\n  = None%0A\n@@ -531,38 +531,47 @@\n       self.__pas\n-senger\n+: Pessoa %7C None\n  = None%0A%0A    def\n@@ -594,22 +594,18 @@\n         \n-driver\n+mt\n  = str(s\n@@ -610,22 +610,18 @@\n (self.__\n-driver\n+mt\n ) if sel\n@@ -628,25 +628,24 @@\n f.__\n-driver\n+mt\n  else %22\n-None\n+(empty)\n %22%0A  \n@@ -653,22 +653,16 @@\n      pas\n-senger\n  = str(s\n@@ -667,25 +667,18 @@\n (self.__\n-passenger\n+mt\n ) if sel\n@@ -688,25 +688,22 @@\n _pas\n-senger\n  else %22\n-None\n+(empty)\n %22%0A  \n@@ -722,17 +722,16 @@\n  f%22Cost:\n- \n %7Bself.__\n@@ -735,33 +735,28 @@\n .__c\n-o\n+u\n st%7D, \n-D\n+d\n river:\n- %7Bdriver%7D, P\n+%7Bmt%7D, p\n asse\n@@ -764,22 +764,19 @@\n ger:\n- \n %7Bpas\n-senger%7D%22%0A\n+%7D%22%0A    \n %0A   \n@@ -787,35 +787,28 @@\n  set\n-Driver\n+Mto\n (self, \n-driver\n+mt\n : Pe\n-rson\n+ssoa\n ):%0A \n@@ -818,31 +818,130 @@\n     \n+if \n self.__\n-driver = driver%0A\n+mt is not None:%0A            print(%22fail: ja existe um motorista%22)%0A            return%0A        self.__mt = mt%0A    \n %0A   \n@@ -951,22 +951,16 @@\n f setPas\n-senger\n (self, p\n@@ -965,22 +965,16 @@\n  pas\n-senger\n : Pe\n-rson\n+ssoa\n ):%0A \n@@ -972,32 +972,35 @@\n essoa):%0A        \n+if \n self.__passenger\n@@ -997,53 +997,143 @@\n _pas\n-senger = passenger%0A%0A    def drive\n+ is not None:%0A            print(%22fail: ja existe um passageiro%22)%0A            return%0A        self.__pas = pas%0A%0A    def inCorrida\n (self, \n-value\n+c\n : in\n@@ -1158,22 +1158,18 @@\n f.__\n-driver\n+mt\n  is None\n  or \n@@ -1168,11 +1168,80 @@\n None\n- or\n+:%0A            print(%22fail: sem motorista%22)%0A            return%0A        if\n  sel\n@@ -1239,38 +1239,32 @@\n    if self.__pas\n-senger\n  is None:%0A      \n@@ -1249,32 +1249,74 @@\n .__pas is None:%0A\n+            print(%22fail: sem passageiro%22)%0A\n             retu\n@@ -1338,20 +1338,19 @@\n .__c\n-o\n+u\n st \n-+\n = \n-value\n+c    \n %0A%0A  \n@@ -1355,30 +1355,25 @@\n     def \n-leavePassenger\n+FiCorrida\n (self):%0A\n@@ -1393,22 +1393,16 @@\n lf.__pas\n-senger\n  is None\n@@ -1395,32 +1395,74 @@\n .__pas is None:%0A\n+            print(%22fail: sem passageiro%22)%0A\n             retu\n@@ -1485,31 +1485,28 @@\n lf.__pas\n-senger.getMoney\n+.getDinheiro\n () %3E= se\n@@ -1504,26 +1504,24 @@\n o() %3E= self.\n-__\n cost:%0A      \n@@ -1532,34 +1532,30 @@\n   self.__pas\n-senger.pay\n+.pagar\n (self.__cost\n@@ -1543,33 +1543,33 @@\n s.pagar(self.__c\n-o\n+u\n st)%0A            \n@@ -1571,39 +1571,34 @@\n      self.__\n-driver.addMoney\n+mt.receber\n (self.__cost\n@@ -1594,17 +1594,17 @@\n self.__c\n-o\n+u\n st)%0A    \n@@ -1626,36 +1626,30 @@\n %22%7Bself.__pas\n-senger\n .getN\n-a\n+o\n me()%7D:%7Bself.\n@@ -1657,27 +1657,23 @@\n _pas\n-senger.getMoney\n+.getDinheiro\n ()%7D\n- \n left\n@@ -1722,106 +1722,58 @@\n Pass\n-enger does not have enough money%22)%0A            self.__driver.addMoney(self.__passenger.getMoney())\n+ageiro sem dinheiro suficiente%22)%0A            valor\n %0A   \n@@ -1796,30 +1796,24 @@\n %22%7Bself.__pas\n-senger\n .getName()%7D:\n@@ -1824,70 +1824,8 @@\n ft%22)\n-%0A            self.__passenger.pay(self.__passenger.getMoney())\n %0A%0A  \n@@ -1838,17 +1838,17 @@\n self.__c\n-o\n+u\n st = 0%0A \n@@ -1864,22 +1864,16 @@\n lf.__pas\n-senger\n  = None%0A\n@@ -1873,17 +1873,16 @@\n = None%0A%0A\n-%0A\n def main\n@@ -1893,18 +1893,17 @@\n     \n-moto\n+car\n  = Mt\n-U\n+u\n ber(\n@@ -1932,86 +1932,48 @@\n     \n-line = input()%0A        print(%22$%22 + line)%0A        args\n+try:%0A            line\n  = \n-l\n in\n-e.spli\n+pu\n t()%0A\n-%0A\n         \n if a\n@@ -1972,337 +1972,63 @@\n     \n-if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A        elif args%5B0%5D == %22setDriver%22:%0A            name = args%5B1%5D%0A            money = int(args%5B2%5D)%0A            driver = Person(name, money)%0A            moto.setDriver(driver)%0A        elif args%5B0%5D == %22setPass%22:%0A            name = args%5B1%5D\n+except EOFError:%0A            break%0A        if not line:\n %0A   \n@@ -2040,286 +2040,13 @@\n     \n-money = int(args%5B2%5D)%0A            passenger = Person(name, money)%0A            moto.setPassenger(passenger)%0A        elif args%5B0%5D == %22drive%22:%0A            value = int(args%5B1%5D)%0A            moto.drive(value)%0A        elif args%5B0%5D == %22leavePass%22:%0A            moto.leavePassenger()%0A%0A%0Amain()\n+continue\n %0A\n",
            "lines": "76"
        },
        {
            "label": "2025-10-27_18-35-27",
            "content": "@@ -1183,25 +1183,10 @@\n     \n-passenger_money =\n+if\n  sel\n@@ -1213,35 +1213,8 @@\n ey()\n-%0A        if passenger_money\n  %3E= \n@@ -1519,16 +1519,23 @@\n ddMoney(\n+self.__\n passenge\n@@ -1539,46 +1539,20 @@\n nger\n-_money)  # s%C3%B3 o que o passageiro tinha\n+.getMoney())\n %0A   \n@@ -1552,32 +1552,41 @@\n ())%0A            \n+print(f%22%7B\n self.__passenger\n@@ -1590,50 +1590,61 @@\n ger.\n-pay(passenger_money)%0A            print(f%22%7B\n+getName()%7D:0 left%22)%0A            self.__passenger.pay(\n self\n@@ -1659,31 +1659,23 @@\n nger.get\n-Name()%7D:0 left%22\n+Money()\n )%0A%0A     \n",
            "lines": "89"
        },
        {
            "label": "2025-10-27_18-39-52",
            "content": "@@ -1225,21 +1225,16 @@\n Money()%0A\n-    %0A\n         \n@@ -1588,15 +1588,8 @@\n  s%C3%B3 \n-recebe \n o qu\n@@ -1717,20 +1717,16 @@\n  left%22)%0A\n-    \n %0A       \n@@ -1776,17 +1776,16 @@\n  None%0A%0A%0A\n-%0A\n def main\n",
            "lines": "90"
        },
        {
            "label": "2025-10-27_18-43-52",
            "content": "@@ -1175,17 +1175,8 @@\n urn%0A\n-        %0A\n     \n",
            "lines": "92"
        },
        {
            "label": "2025-10-27_18-44-38",
            "content": "@@ -499,31 +499,16 @@\n __driver\n-: Person %7C None\n  = None%0A\n@@ -535,23 +535,8 @@\n nger\n-: Person %7C None\n  = N\n@@ -961,20 +961,21 @@\n e(self, \n-cost\n+value\n : int):%0A\n@@ -1078,20 +1078,21 @@\n cost += \n-cost\n+value\n %0A%0A    de\n@@ -1163,32 +1163,41 @@\n          return%0A\n+        %0A\n         passenge\n@@ -1234,16 +1234,21 @@\n Money()%0A\n+    %0A\n         \n@@ -1540,16 +1540,106 @@\n money%22)%0A\n+            self.__driver.addMoney(passenger_money)  # s%C3%B3 recebe o que o passageiro tinha%0A\n         \n@@ -1746,51 +1746,8 @@\n     \n-        self.__driver.addMoney(self.__cost)\n %0A   \n@@ -1801,16 +1801,17 @@\n  None%0A%0A%0A\n+%0A\n def main\n@@ -1899,16 +1899,16 @@\n + line)%0A\n-\n         \n@@ -1923,24 +1923,25 @@\n ine.split()%0A\n+%0A\n         if a\n",
            "lines": "93"
        },
        {
            "label": "2025-10-27_18-47-20",
            "content": "class Person:\n    def __init__(self, name: str, money: int):\n        self.__name = name\n        self.__money = money\n\n    def getName(self):\n        return self.__name\n\n    def getMoney(self):\n        return self.__money\n\n    def addMoney(self, value: int):\n        self.__money += value\n\n    def pay(self, value: int):\n        self.__money -= value\n\n    def __str__(self):\n        return f\"{self.__name}:{self.__money}\"\n\n\nclass MtUber:\n    def __init__(self):\n        self.__cost = 0\n        self.__driver: Person | None = None\n        self.__passenger: Person | None = None\n\n    def __str__(self):\n        driver = str(self.__driver) if self.__driver else \"None\"\n        passenger = str(self.__passenger) if self.__passenger else \"None\"\n        return f\"Cost: {self.__cost}, Driver: {driver}, Passenger: {passenger}\"\n\n    def setDriver(self, driver: Person):\n        self.__driver = driver\n\n    def setPassenger(self, passenger: Person):\n        self.__passenger = passenger\n\n    def drive(self, cost: int):\n        if self.__driver is None or self.__passenger is None:\n            return\n        self.__cost += cost\n\n    def leavePassenger(self):\n        if self.__passenger is None:\n            return\n        passenger_money = self.__passenger.getMoney()\n        if passenger_money >= self.__cost:\n            self.__passenger.pay(self.__cost)\n            self.__driver.addMoney(self.__cost)\n            print(f\"{self.__passenger.getName()}:{self.__passenger.getMoney()} left\")\n        else:\n            print(\"fail: Passenger does not have enough money\")\n            self.__passenger.pay(passenger_money)\n            print(f\"{self.__passenger.getName()}:0 left\")\n            self.__driver.addMoney(self.__cost)\n        self.__cost = 0\n        self.__passenger = None\n\n\ndef main():\n    moto = MtUber()\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(moto)\n        elif args[0] == \"setDriver\":\n            name = args[1]\n            money = int(args[2])\n            driver = Person(name, money)\n            moto.setDriver(driver)\n        elif args[0] == \"setPass\":\n            name = args[1]\n            money = int(args[2])\n            passenger = Person(name, money)\n            moto.setPassenger(passenger)\n        elif args[0] == \"drive\":\n            value = int(args[1])\n            moto.drive(value)\n        elif args[0] == \"leavePass\":\n            moto.leavePassenger()\n\n\nmain()\n",
            "lines": "88"
        }
    ]
}